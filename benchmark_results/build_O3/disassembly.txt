__Z16convert_to_ycbcrRNSt3__16vectorI3RGBNS_9allocatorIS1_EEEE:
0000000100000a30	stp	d11, d10, [sp, #-0x60]!
0000000100000a34	stp	d9, d8, [sp, #0x10]
0000000100000a38	stp	x24, x23, [sp, #0x20]
0000000100000a3c	stp	x22, x21, [sp, #0x30]
0000000100000a40	stp	x20, x19, [sp, #0x40]
0000000100000a44	stp	x29, x30, [sp, #0x50]
0000000100000a48	add	x29, sp, #0x50
0000000100000a4c	mov	x20, x8
0000000100000a50	ldp	x22, x8, [x0]
0000000100000a54	stp	xzr, xzr, [x20, #0x8]
0000000100000a58	str	xzr, [x20]
0000000100000a5c	subs	x8, x8, x22
0000000100000a60	b.eq	0x100000ea0
0000000100000a64	mov	x9, #-0x5555555555555556
0000000100000a68	movk	x9, #0xaaab
0000000100000a6c	mul	x23, x8, x9
0000000100000a70	mov	x8, #0x5555555555555555
0000000100000a74	movk	x8, #0x5556
0000000100000a78	movk	x8, #0x1555, lsl #48
0000000100000a7c	cmp	x23, x8
0000000100000a80	b.hs	0x100000ebc
0000000100000a84	add	x8, x23, x23, lsl #1
0000000100000a88	lsl	x21, x8, #2
0000000100000a8c	mov	x0, x21
0000000100000a90	bl	0x1000022c8 ; symbol stub for: __Znwm
0000000100000a94	mov	x19, x0
0000000100000a98	str	x0, [x20]
0000000100000a9c	mov	w8, #0xc
0000000100000aa0	madd	x9, x23, x8, x0
0000000100000aa4	str	x9, [x20, #0x10]
0000000100000aa8	sub	x9, x21, #0xc
0000000100000aac	mov	x10, #-0x5555555555555556
0000000100000ab0	movk	x10, #0xaaab
0000000100000ab4	umulh	x9, x9, x10
0000000100000ab8	lsr	x9, x9, #3
0000000100000abc	mov	x10, #0xc
0000000100000ac0	madd	x21, x9, x8, x10
0000000100000ac4	mov	x1, x21
0000000100000ac8	bl	0x100002328 ; symbol stub for: _bzero
0000000100000acc	add	x8, x19, x21
0000000100000ad0	str	x8, [x20, #0x8]
0000000100000ad4	cmp	x23, #0x1
0000000100000ad8	csinc	x8, x23, xzr, hi
0000000100000adc	cmp	x23, #0x8
0000000100000ae0	b.hs	0x100000aec
0000000100000ae4	mov	x9, #0x0
0000000100000ae8	b	0x100000dfc
0000000100000aec	adrp	x11, 2 ; 0x100002000
0000000100000af0	adrp	x10, 2 ; 0x100002000
0000000100000af4	cmp	x23, #0x10
--
0000000100001738	bl	__Z16convert_to_ycbcrRNSt3__16vectorI3RGBNS_9allocatorIS1_EEEE
000000010000173c	bl	0x100002280 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000100001740	mov	x21, x0
0000000100001744	adrp	x0, 3 ; 0x100004000
0000000100001748	ldr	x0, [x0, #0x100] ; literal pool symbol address: __ZNSt3__14coutE
000000010000174c	adrp	x1, 1 ; 0x100002000
0000000100001750	add	x1, x1, #0x6e3 ; literal pool for: "YCbCr conversion: "
0000000100001754	mov	w2, #0x12
0000000100001758	bl	__ZNSt3__124__put_character_sequenceB8ne190102IcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m
000000010000175c	sub	x8, x21, x20
0000000100001760	mov	x24, #0xf7cf
0000000100001764	movk	x24, #0xe353, lsl #16
0000000100001768	movk	x24, #0x9ba5, lsl #32
000000010000176c	movk	x24, #0x20c4, lsl #48
0000000100001770	smulh	x8, x8, x24
0000000100001774	asr	x9, x8, #7
0000000100001778	add	x1, x9, x8, lsr #63
000000010000177c	bl	0x100002274 ; symbol stub for: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEx
0000000100001780	adrp	x1, 1 ; 0x100002000
0000000100001784	add	x1, x1, #0x6f6 ; literal pool for: " \316\274s\n"
0000000100001788	mov	w2, #0x5
000000010000178c	bl	__ZNSt3__124__put_character_sequenceB8ne190102IcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m
0000000100001790	stp	xzr, xzr, [sp, #0x38]
0000000100001794	str	xzr, [sp, #0x48]
0000000100001798	stp	xzr, xzr, [sp, #0x20]
000000010000179c	str	xzr, [sp, #0x30]
00000001000017a0	ldp	w21, w20, [x29, #-0x50]
00000001000017a4	add	x0, sp, #0x50
00000001000017a8	add	x3, sp, #0x38
00000001000017ac	add	x4, sp, #0x20
00000001000017b0	mov	x1, x20
00000001000017b4	mov	x2, x21
00000001000017b8	bl	__Z13subsample_420RNSt3__16vectorI5YCbCrNS_9allocatorIS1_EEEEiiRNS0_IfNS2_IfEEEES8_
00000001000017bc	cmp	w21, #0x1
00000001000017c0	b.lt	0x100001834
00000001000017c4	cmp	w20, #0x1
00000001000017c8	b.lt	0x100001834
00000001000017cc	mov	x8, #0x0
00000001000017d0	add	w9, w20, #0x1
00000001000017d4	add	w9, w9, w9, lsr #31
00000001000017d8	asr	w9, w9, #1
00000001000017dc	ldr	x10, [sp, #0x38]
00000001000017e0	ldr	x12, [sp, #0x50]
00000001000017e4	ldr	x11, [sp, #0x20]
00000001000017e8	add	x12, x12, #0x8
00000001000017ec	add	x13, x20, x20, lsl #1
00000001000017f0	lsl	x13, x13, #2
00000001000017f4	mov	x14, #0x0
00000001000017f8	ubfx	x15, x8, #1, #31
00000001000017fc	mul	w15, w15, w9
0000000100001800	mov	x16, x12
